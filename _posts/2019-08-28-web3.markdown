---
layout: post
title: "WEB3: 19년 8월 28일 동아리 활동 보고서"
date: 2019-08-28 00:00:00 +0300
description: 19년 8월 28일 동아리 활동 보고서 # Add post description (optional)
img: # Add image post (optional)
fig-caption: # Add figcaption (optional)
tags: [report, web]
---

8월 28일, 404 컴퓨터 못 찾음은 17시부터 18시까지 1시간동안 2학기 위키위키 개발 프로젝트를 진행하게 되었습니다.  
본격적으로 웹 애플리케이션의 구조를 구성하기 위해 HTML을 스터디했습니다.

## HTML: HyperText Markup Language
HTML은 웹 브라우저를 통해 웹 사이트의 내용을 보여주기 위해 등장했습니다.  
일정한 규칙에 따라 웹 사이트를 작성하면 우리가 일상적으로 접속하는 사이트를 구현할 수 있습니다.

## Flask에서 HTML의 위치
이전 시간에 Flask 예제 파일을 따라서 작성해보았습니다.

```python

app = flask.Flask(__name__)

@app.route('/<name>')
def route_name(name = "):
    return '당신의 이름은 {}이군요!'.format(name)

app.run(port=2500)
```

에서 `'당신의 이름은 {}이군요!'.format(name)`은 HTML 코드로써 전송된다고 볼 수 있습니다.

## HTML은 어떻게 사용하는고?
### 기본 구조
```html
<(1) (2)>(3)</(1)>
```

`<a href="https://naver.com/">네이버</a>`와 같이 작성합니다. 이 예시 한 덩이를 태그라고 합니다.

(1) 태그의 종류를 작성합니다: ex의 경우 a가 해당합니다. (a는 링크를 거는 태그입니다.)  
(2) 속성값: 태그가 요구하는 별도의 정보를 작성합니다.  
	ex의 경우 href="https://naver.com/" 가 해당합니다.
	* 띄어써서 여러개의 속성값을 구별합니다: <p class="text" id="section-2">
(3) 사람들에게 보여줄 내용을 입력합니다. 따로 보여줄 내용이 없는 태그의 경우 비워놓습니다.
	`<script src="./index.js"></script>`

I) `<a href="https://naver.com/">`과 같이 태그를 시작하는 부분을 여는 태그라고 합니다.
II) `</a>`와 같이 /를 꺽쇠 바로 뒤에 붙여 태그를 끝내는 부분을 닫는 태그라고 합니다.